/*!
 * angular-translate - v2.6.0 - 2015-02-08
 * http://github.com/angular-translate/angular-translate
 * Copyright (c) 2015 ; Licensed MIT
 */
angular.module("pascalprecht.translate").provider("$translatePartialLoader",function(){function a(a,b){this.name=a,this.isActive=!0,this.tables={***REMOVED***,this.priority=b||0***REMOVED***function b(a){return Object.prototype.hasOwnProperty.call(g,a)***REMOVED***function c(a){return angular.isString(a)&&""!==a***REMOVED***function d(a){if(!c(a))throw new TypeError("Invalid type of a first argument, a non-empty string expected.");return b(a)&&g[a].isActive***REMOVED***function e(a,b){for(var c in b)b[c]&&b[c].constructor&&b[c].constructor===Object?(a[c]=a[c]||{***REMOVED***,e(a[c],b[c])):a[c]=b[c];return a***REMOVED***function f(){var a=[];for(var b in g)g[b].isActive&&a.push(g[b]);return a.sort(function(a,b){return a.priority-b.priority***REMOVED***),a***REMOVED***a.prototype.parseUrl=function(a,b){return a.replace(/\{part\***REMOVED***/g,this.name).replace(/\{lang\***REMOVED***/g,b)***REMOVED***,a.prototype.getTable=function(a,b,c,d,e,f){var g=b.defer();if(this.tables[a])g.resolve(this.tables[a]);else{var h=this;c(angular.extend({method:"GET",url:this.parseUrl(e,a)***REMOVED***,d)).success(function(b){h.tables[a]=b,g.resolve(b)***REMOVED***).error(function(){f?f(h.name,a).then(function(b){h.tables[a]=b,g.resolve(b)***REMOVED***,function(){g.reject(h.name)***REMOVED***):g.reject(h.name)***REMOVED***)***REMOVED***return g.promise***REMOVED***;var g={***REMOVED***;this.addPart=function(d,e){if(!c(d))throw new TypeError("Couldn't add part, part name has to be a string!");return b(d)||(g[d]=new a(d,e)),g[d].isActive=!0,this***REMOVED***,this.setPart=function(d,e,f){if(!c(d))throw new TypeError("Couldn't set part.`lang` parameter has to be a string!");if(!c(e))throw new TypeError("Couldn't set part.`part` parameter has to be a string!");if("object"!=typeof f||null===f)throw new TypeError("Couldn't set part. `table` parameter has to be an object!");return b(e)||(g[e]=new a(e),g[e].isActive=!1),g[e].tables[d]=f,this***REMOVED***,this.deletePart=function(a){if(!c(a))throw new TypeError("Couldn't delete part, first arg has to be string.");return b(a)&&(g[a].isActive=!1),this***REMOVED***,this.isPartAvailable=d,this.$get=["$rootScope","$injector","$q","$http",function(h,i,j,k){var l=function(a){if(!c(a.key))throw new TypeError("Unable to load data, a key is not a non-empty string.");if(!c(a.urlTemplate))throw new TypeError("Unable to load data, a urlTemplate is not a non-empty string.");var b=a.loadFailureHandler;if(void 0!==b){if(!angular.isString(b))throw new Error("Unable to load data, a loadFailureHandler is not a string.");b=i.get(b)***REMOVED***var d=[],g=j.defer(),h=f();return angular.forEach(h,function(c){d.push(c.getTable(a.key,j,k,a.$http,a.urlTemplate,b)),c.urlTemplate=a.urlTemplate***REMOVED***),j.all(d).then(function(){var b={***REMOVED***;angular.forEach(h,function(c){e(b,c.tables[a.key])***REMOVED***),g.resolve(b)***REMOVED***,function(){g.reject(a.key)***REMOVED***),g.promise***REMOVED***;return l.addPart=function(d,e){if(!c(d))throw new TypeError("Couldn't add part, first arg has to be a string");return b(d)?g[d].isActive||(g[d].isActive=!0,h.$emit("$translatePartialLoaderStructureChanged",d)):(g[d]=new a(d,e),h.$emit("$translatePartialLoaderStructureChanged",d)),l***REMOVED***,l.deletePart=function(a,d){if(!c(a))throw new TypeError("Couldn't delete part, first arg has to be string");if(void 0===d)d=!1;else if("boolean"!=typeof d)throw new TypeError("Invalid type of a second argument, a boolean expected.");if(b(a)){var e=g[a].isActive;if(d){var f=i.get("$translate"),j=f.loaderCache();"string"==typeof j&&(j=i.get(j)),"object"==typeof j&&angular.forEach(g[a].tables,function(b,c){j.remove(g[a].parseUrl(g[a].urlTemplate,c))***REMOVED***),delete g[a]***REMOVED***else g[a].isActive=!1;e&&h.$emit("$translatePartialLoaderStructureChanged",a)***REMOVED***return l***REMOVED***,l.isPartLoaded=function(a,b){return angular.isDefined(g[a])&&angular.isDefined(g[a].tables[b])***REMOVED***,l.getRegisteredParts=function(){var a=[];return angular.forEach(g,function(b){b.isActive&&a.push(b.name)***REMOVED***),a***REMOVED***,l.isPartAvailable=d,l***REMOVED***]***REMOVED***);