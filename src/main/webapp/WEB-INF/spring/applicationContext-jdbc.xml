<?xml version="1.0" encoding="UTF-8"?***REMOVED***
<!--
	Application context definition for PetClinic on JDBC.
--***REMOVED***
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"***REMOVED***

	<!-- ========================= RESOURCE DEFINITIONS ========================= --***REMOVED***

    <!-- import the dataSource definition --***REMOVED***
    <import resource="applicationContext-dataSource.xml"/***REMOVED***

	<!-- Transaction manager for a single JDBC DataSource (alternative to JTA) --***REMOVED***
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
			p:dataSource-ref="dataSource"/***REMOVED***

	<!-- Transaction manager that delegates to JTA (for a transactional JNDI DataSource) --***REMOVED***
	<!--
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/***REMOVED***
	--***REMOVED***


	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= --***REMOVED***

	<!--
		Activates various annotations to be detected in bean classes: Spring's
		@Required and @Autowired, as well as JSR 250's @PostConstruct,
		@PreDestroy and @Resource (if available) and JPA's @PersistenceContext
		and @PersistenceUnit (if available).
	--***REMOVED***
	<context:annotation-config/***REMOVED***

	<!--
		Instruct Spring to retrieve and apply @AspectJ aspects which are defined
		as beans in this context (such as the CallMonitoringAspect below).
	--***REMOVED***
	<aop:aspectj-autoproxy/***REMOVED***

	<!--
		Instruct Spring to perform automatic transaction management on annotated classes.
		The SimpleJdbcClinic implementation declares @Transactional annotations.
		"proxy-target-class" is set because of SimpleJdbcClinic's @ManagedOperation usage.
	--***REMOVED***
	<tx:annotation-driven/***REMOVED***

	<!--
		Exporter that exposes the Clinic DAO and the CallMonitoringAspect via JMX,
		based on the @ManagedResource, @ManagedAttribute, and @ManagedOperation annotations.
	--***REMOVED*** 
	<context:mbean-export/***REMOVED***

	<!-- PetClinic's central data access object using Spring's SimpleJdbcTemplate --***REMOVED***
	<bean id="clinic" class="org.springframework.samples.petclinic.jdbc.SimpleJdbcClinic"/***REMOVED***

	<!-- Call monitoring aspect that monitors call count and call invocation time --***REMOVED***
	<bean id="callMonitor" class="org.springframework.samples.petclinic.aspects.CallMonitoringAspect"/***REMOVED***

</beans***REMOVED***