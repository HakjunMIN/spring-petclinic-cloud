<?xml version="1.0" encoding="UTF-8"?***REMOVED***
<!--
	Application context definition for PetClinic on Hibernate.
--***REMOVED***
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"***REMOVED***

	<!-- ========================= RESOURCE DEFINITIONS ========================= --***REMOVED***

	<!-- Configurer that replaces ${***REMOVED******REMOVED*** placeholders with values from a properties file --***REMOVED***
	<!-- (in this case, JDBC-related settings for the dataSource definition below) --***REMOVED***
	<context:property-placeholder location="classpath:jdbc.properties"/***REMOVED***

	<!--
		Uses Apache Commons DBCP for connection pooling. See Commons DBCP documentation
		for the required JAR files. Alternatively you can use another connection pool
		such as C3P0, similarly configured using Spring.
	--***REMOVED***
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
			p:driverClassName="${jdbc.driverClassName***REMOVED***" p:url="${jdbc.url***REMOVED***" p:username="${jdbc.username***REMOVED***"
			p:password="${jdbc.password***REMOVED***"/***REMOVED***

	<!-- JNDI DataSource for JEE environments --***REMOVED***
	<!--
		<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/petclinic"/***REMOVED***
	--***REMOVED***

	<!-- Hibernate SessionFactory --***REMOVED***
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
			p:dataSource-ref="dataSource" p:mappingResources="petclinic.hbm.xml"***REMOVED***
		<property name="hibernateProperties"***REMOVED***
			<props***REMOVED***
				<prop key="hibernate.dialect"***REMOVED***${hibernate.dialect***REMOVED***</prop***REMOVED***
				<prop key="hibernate.show_sql"***REMOVED***${hibernate.show_sql***REMOVED***</prop***REMOVED***
				<prop key="hibernate.generate_statistics"***REMOVED***${hibernate.generate_statistics***REMOVED***</prop***REMOVED***
			</props***REMOVED***
		</property***REMOVED***
		<property name="eventListeners"***REMOVED***
			<map***REMOVED***
				<entry key="merge"***REMOVED***
					<bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/***REMOVED***
				</entry***REMOVED***
			</map***REMOVED***
		</property***REMOVED***
	</bean***REMOVED***

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) --***REMOVED***
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
			p:sessionFactory-ref="sessionFactory"/***REMOVED***

	<!-- Transaction manager that delegates to JTA (for a transactional JNDI DataSource) --***REMOVED***
	<!--
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/***REMOVED***
	--***REMOVED***


	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= --***REMOVED***

	<!--
		Activates various annotations to be detected in bean classes:
		Spring's @Required and @Autowired, as well as JSR 250's @Resource.
	--***REMOVED***
	<context:annotation-config/***REMOVED***

	<!--
		Instruct Spring to perform declarative transaction management
		automatically on annotated classes.
	--***REMOVED***
	<tx:annotation-driven/***REMOVED***

	<!--
		Exporter that exposes the Hibernate statistics service via JMX. Autodetects the
		service MBean, using its bean name as JMX object name.
	--***REMOVED***
	<context:mbean-export/***REMOVED***

	<!-- PetClinic's central data access object: Hibernate implementation --***REMOVED***
	<bean id="clinic" class="org.springframework.samples.petclinic.hibernate.HibernateClinic"/***REMOVED***

	<!-- Hibernate's JMX statistics service --***REMOVED***
	<bean name="petclinic:type=HibernateStatistics" class="org.hibernate.jmx.StatisticsService" autowire="byName"/***REMOVED***

</beans***REMOVED***
