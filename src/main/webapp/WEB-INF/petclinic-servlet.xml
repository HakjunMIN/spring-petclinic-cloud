<?xml version="1.0" encoding="UTF-8"?***REMOVED***
<!--
	- DispatcherServlet application context for PetClinic's web tier.
--***REMOVED***
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"***REMOVED***

	<!--
		- The controllers are autodetected POJOs labeled with the @Controller annotation.
	--***REMOVED***
	<context:component-scan base-package="org.springframework.samples.petclinic.web"/***REMOVED***
	
	
	 <mvc:annotation-driven  /***REMOVED***
	
	<!--  all resources inside folder src/main/webapp/resources are mapped so they can be refered to inside JSP files
		(see header.jsp for more details) --***REMOVED***
	<mvc:resources mapping="/resources/**" location="/resources/"/***REMOVED***
	
	<!-- uses WebJars so Javascript and CSS libs can be declared as Maven dependencies (we're using it for Bootstrap) --***REMOVED***
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/***REMOVED***
	
	
<!--
		- This view resolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
		- and uses the requested media type to pick a matching view. When the media type is 'text/html',
		- it will delegate to the InternalResourceViewResolver's JstlView, otherwise to the
		- BeanNameViewResolver. Note the use of the expression language to refer to the contentType
		- property of the vets view bean, setting it to 'application/vnd.springsource.samples.petclinic+xml'.
	--***REMOVED***
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"***REMOVED***
		<property name="contentNegotiationManager"***REMOVED***
            <bean class="org.springframework.web.accept.ContentNegotiationManager"***REMOVED***
                <constructor-arg***REMOVED***
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy"***REMOVED***
                        <constructor-arg***REMOVED***
                            <map***REMOVED***
				 				<entry key="xml" value="#{vetsList.contentType***REMOVED***"/***REMOVED***
								<entry key="atom" value="#{visitsList.contentType***REMOVED***"/***REMOVED***
                           </map***REMOVED***
                        </constructor-arg***REMOVED***
                    </bean***REMOVED***
                </constructor-arg***REMOVED***
            </bean***REMOVED***
        </property***REMOVED***
		<property name="order" value="0"/***REMOVED***
	</bean***REMOVED***
	
	<!--
		- The BeanNameViewResolver is used to pick up the visits view name (below).
		- It has the order property set to 2, which means that this will
		- be the first view resolver to be used after the delegating content
		- negotiating view resolver.
	 --***REMOVED***
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="1"/***REMOVED***
	<!--

		- This bean configures the 'prefix' and 'suffix' properties of
		- InternalResourceViewResolver, which resolves logical view names
		- returned by Controllers. For example, a logical view name of "vets"
		- will be mapped to "/WEB-INF/jsp/vets.jsp".
	--***REMOVED***
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/jsp/"
			p:suffix=".jsp" p:order="2"/***REMOVED***
			
	<!--
		- Message source for this context, loaded from localized "messages_xx" files.
		- Files are stored inside src/main/resources
	--***REMOVED***
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
			p:basename="messages/messages"/***REMOVED***
	
	<!--
		Processes annotated handler methods, applying PetClinic-specific request parameter binding. 
	--***REMOVED***
	 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"***REMOVED***
		<property name="webBindingInitializer"***REMOVED*** 
			<bean class="org.springframework.samples.petclinic.web.ClinicBindingInitializer"/***REMOVED***
		</property***REMOVED***
	</bean***REMOVED***

	<!--
		- This bean resolves specific types of exceptions to corresponding logical 
		- view names for error views. The default behaviour of DispatcherServlet 
		- is to propagate all exceptions to the servlet container: this will happen 
		- here with all other types of exceptions.
	--***REMOVED***
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"***REMOVED***
		<property name="defaultErrorView" value="exception"/***REMOVED***
	</bean***REMOVED***


	<!-- 	- The AtomView rendering a Atom feed of the visits  --***REMOVED***
	 
	<bean id="visitsList" class="org.springframework.samples.petclinic.web.VisitsAtomView"/***REMOVED***

	<bean id="vetsList" class="org.springframework.web.servlet.view.xml.MarshallingView"***REMOVED***
		<property name="contentType" value="application/vnd.springsource.samples.petclinic+xml"/***REMOVED***
		<property name="marshaller" ref="marshaller"/***REMOVED***
	</bean***REMOVED***

	<oxm:jaxb2-marshaller id="marshaller"***REMOVED***
		<oxm:class-to-be-bound name="org.springframework.samples.petclinic.Vets"/***REMOVED***
	</oxm:jaxb2-marshaller***REMOVED***

</beans***REMOVED***
