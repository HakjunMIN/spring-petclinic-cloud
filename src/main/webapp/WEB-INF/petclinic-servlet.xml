<?xml version="1.0" encoding="UTF-8"?***REMOVED***
<!--
	- DispatcherServlet application context for PetClinic's web tier.
--***REMOVED***
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"***REMOVED***

	<!--
		- The controllers are autodetected POJOs labeled with the @Controller annotation.
	--***REMOVED***
	<context:component-scan base-package="org.springframework.samples.petclinic.web"/***REMOVED***

	<!--
		- The form-based controllers within this application provide @RequestMapping 
		- annotations at the type level for path mapping URLs and @RequestMapping 
		- at the method level for request type mappings (e.g., GET and POST). 
		- In contrast, ClinicController - which is not form-based - provides 
		- @RequestMapping only at the method level for path mapping URLs.
		-
		- DefaultAnnotationHandlerMapping is driven by these annotations and is 
		- enabled by default with Java 5+.
	--***REMOVED***
	
	<!--
		- This bean processes annotated handler methods, applying PetClinic-specific PropertyEditors
		- for request parameter binding. It overrides the default AnnotationMethodHandlerAdapter.
	--***REMOVED***
	 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"***REMOVED***
		<property name="webBindingInitializer"***REMOVED*** 
			<bean class="org.springframework.samples.petclinic.web.ClinicBindingInitializer"/***REMOVED***
		</property***REMOVED***
	</bean***REMOVED***

	<!--
		- This bean resolves specific types of exceptions to corresponding logical 
		- view names for error views. The default behaviour of DispatcherServlet 
		- is to propagate all exceptions to the servlet container: this will happen 
		- here with all other types of exceptions.
	--***REMOVED***
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"***REMOVED***
		<property name="exceptionMappings"***REMOVED***
			<props***REMOVED***
				<prop key="org.springframework.web.servlet.PageNotFound"***REMOVED***pageNotFound</prop***REMOVED***
				<prop key="org.springframework.dao.DataAccessException"***REMOVED***dataAccessFailure</prop***REMOVED***
				<prop key="org.springframework.transaction.TransactionException"***REMOVED***dataAccessFailure</prop***REMOVED***
			</props***REMOVED***
		</property***REMOVED***
		<property name="defaultErrorView" value="uncaughtException"/***REMOVED***
	</bean***REMOVED***

	<!--
		- This view resolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
		- and uses the requested media type to pick a matching view. When the media type is 'text/html',
		- it will delegate to the InternalResourceViewResolver's JstlView, otherwise to the
		- BeanNameViewResolver. Note the use of the expression language to refer to the contentType
		- property of the vets view bean, setting it to 'application/vnd.springsource.samples.petclinic+xml'.
	--***REMOVED***
	
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" /***REMOVED*** 

	<mvc:resources mapping="/resources/**" location="/resources/"/***REMOVED***
	
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/***REMOVED***
	

	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"***REMOVED***
	    <property name="favorPathExtension" value="false" /***REMOVED***
	    <property name="favorParameter" value="true" /***REMOVED***
	    <property name="mediaTypes"***REMOVED***
	        <value***REMOVED***
	            atom=application/atom+xml
	            html=text/html
	            xml=application/xml
	        </value***REMOVED***
	    </property***REMOVED***
	</bean***REMOVED***

	
	<!--
		- The BeanNameViewResolver is used to pick up the visits view name (below).
		- It has the order property set to 1, which means that this will
		- be the first view resolver to be used after the delegating content
		- negotiating view resolver.
	 --***REMOVED***
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" /***REMOVED***
	<!--

		- This bean configures the 'prefix' and 'suffix' properties of
		- InternalResourceViewResolver, which resolves logical view names
		- returned by Controllers. For example, a logical view name of "vets"
		- will be mapped to "/WEB-INF/jsp/vets.jsp".
	--***REMOVED***
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/jsp/"
			p:suffix=".jsp" /***REMOVED***

	
	<!-- 	- The AtomView rendering a Atom feed of the visits  --***REMOVED***
	 
	<bean id="visits" class="org.springframework.samples.petclinic.web.VisitsAtomView"/***REMOVED***

	<bean id="vets" class="org.springframework.web.servlet.view.xml.MarshallingView"***REMOVED***
		<property name="contentType" value="application/vnd.springsource.samples.petclinic+xml"/***REMOVED***
		<property name="marshaller" ref="marshaller"/***REMOVED***
	</bean***REMOVED***

	<oxm:jaxb2-marshaller id="marshaller"***REMOVED***
		<oxm:class-to-be-bound name="org.springframework.samples.petclinic.Vets"/***REMOVED***
	</oxm:jaxb2-marshaller***REMOVED***

	<!--
		- Message source for this context, loaded from localized "messages_xx" files.
		- Could also reside in the root application context, as it is generic,
		- but is currently just used within PetClinic's web tier.
	--***REMOVED***
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
			p:basename="messages"/***REMOVED***

</beans***REMOVED***
