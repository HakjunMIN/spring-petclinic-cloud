<?xml version="1.0" encoding="UTF-8"?***REMOVED***
<!--
    Repository and Service layers
--***REMOVED***
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"***REMOVED***
 
    <!-- ========================= RESOURCE DEFINITIONS ========================= --***REMOVED***

    <!-- import the dataSource definition --***REMOVED***
    <import resource="datasource-config.xml"/***REMOVED***

    <context:component-scan
            base-package="org.springframework.samples.petclinic.service"/***REMOVED***

    <!-- Configurer that replaces ${***REMOVED******REMOVED*** placeholders with values from a properties file --***REMOVED***
    <!-- (in this case, JDBC-related settings for the JPA EntityManager definition below) --***REMOVED***
    <context:property-placeholder location="classpath:spring/data-access.properties" system-properties-mode="OVERRIDE"/***REMOVED***

     <!-- enables scanning for @Transactional annotations --***REMOVED***
    <tx:annotation-driven /***REMOVED***
 
	
	<!-- ==================		 3 Profiles to choose from 			=================== 
									- default (uses JPA)
									- jdbc (uses Spring" JdbcTemplate)
									- spring-data-jpa	
		  =============================================================================--***REMOVED***
	
    <beans profile="default,spring-data-jpa"***REMOVED***
        <!-- JPA EntityManagerFactory --***REMOVED***
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource"***REMOVED***
            <property name="jpaVendorAdapter"***REMOVED***
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                      p:database="${jpa.database***REMOVED***" p:showSql="${jpa.showSql***REMOVED***"/***REMOVED***
                <!-- the 'database' parameter refers to the database dialect being used.
                	By default, Hibernate will use a 'HSQL' dialect because 'jpa.database' has been set to 'HSQL'
                	inside file spring/data-access.properties
                
                 --***REMOVED***
            </property***REMOVED***
            <!-- gDickens: BOTH Persistence Unit and Packages to Scan are NOT compatible, persistenceUnit will win --***REMOVED***
            <property name="persistenceUnitName" value="petclinic"/***REMOVED***
            <property name="packagesToScan" value="org.springframework.samples.petclinic"/***REMOVED***
        </bean***REMOVED***

        <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) --***REMOVED***
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory"/***REMOVED***


        <!--
            Post-processor to perform exception translation on @Repository classes (from native
            exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).
        --***REMOVED***
        <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/***REMOVED***

    </beans***REMOVED***

    <beans profile="jdbc"***REMOVED***
        <!-- Transaction manager for a single JDBC DataSource (alternative to JTA) --***REMOVED***
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
              p:dataSource-ref="dataSource"/***REMOVED***

        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"***REMOVED***
            <constructor-arg ref="dataSource"/***REMOVED***
        </bean***REMOVED***

        <bean id="namedParameterJdbcTemplate"
              class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"***REMOVED***
            <constructor-arg ref="dataSource"/***REMOVED***
        </bean***REMOVED***

        <context:component-scan base-package="org.springframework.samples.petclinic.repository.jdbc"/***REMOVED***
    </beans***REMOVED***

    <beans profile="default"***REMOVED***
        <!--
            Loads JPA beans
            Will automatically be transactional due to @Transactional.
            EntityManager will be auto-injected due to @PersistenceContext.
            PersistenceExceptions will be auto-translated due to @Repository.
        --***REMOVED***
        <context:component-scan base-package="org.springframework.samples.petclinic.repository.jpa"/***REMOVED***
    </beans***REMOVED***

    <beans profile="spring-data-jpa"***REMOVED***
        <jpa:repositories base-package="org.springframework.samples.petclinic.repository.springdatajpa"/***REMOVED***
    </beans***REMOVED***
</beans***REMOVED***